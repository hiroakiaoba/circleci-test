# version: 2
# jobs:
#   build:
#     docker:
#       # specify the version you desire here
#       - image: circleci/node:7.10

#       # Specify service dependencies here if necessary
#       # CircleCI maintains a library of pre-built images
#       # documented at https://circleci.com/docs/2.0/circleci-images/
#       # - image: circleci/mongo:3.4.4

#     working_directory: ~/circleci-test-repo/

#     steps:
#       - checkout

#       # Download and cache dependencies
#       - restore_cache:
#           keys:
#             - v1-dependencies-{{ checksum "package.json" }}
#             # fallback to using the latest cache if no exact match is found
#             - v1-dependencies-

#       - run: npm install

#       - run: pwd
#       - run: ls

#       - save_cache:
#           paths:
#             - node_modules
#           key: v1-dependencies-{{ checksum "package.json" }}

#       # run tests!
#       - run: npm test

# version: 2
# jobs:
#   build:
#     docker:
#       - image: circleci/node:7.10
#     working_directory: ~/circleci-test-repo

#     steps:
#       - setup_remote_docker:
#           version: 17.11.0-ce
#           docker_layer_caching: true
#       - checkout

#       # This should go into custom primary image, here's only for the sake of explanation
#       - run:
#           name: Install Docker client
#           command: |
#             set -x
#             VER="17.03.0-ce"
#             curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
#             tar -xz -C /tmp -f /tmp/docker-$VER.tgz
#             mv /tmp/docker/* /usr/bin

#       # This should go into custom primary image, here's only for the sake of explanation
#       - run:
#           name: Install Docker Compose
#           command: |
#             set -x
#             curl -L https://github.com/docker/compose/releases/download/1.11.2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
#             chmod +x /usr/local/bin/docker-compose

#       - run:
#           name: Start container and verify it's working
#           command: |
#             set -x
#             ls
#             pwd
#             docker-compose up -d
#             docker run --network container:web \
#             appropriate/curl --retry 10 --retry-delay 1 --retry-connrefused http://localhost:3000

version: 2
jobs:
  build:
    machine: true
    working_directory: ~/circleci-test-repo
    steps:
      - checkout
      - run:
          name: git clone projects
          command: |
            git clone git@github.com:Nextremer/minarai-environment.git
            cd minarai-environment
            git clone git@github.com:Nextremer/minarai-daialogue-hub.git
            git clone git@github.com:Nextremer/minarai-connection-service.git
            git clone git@github.com:Nextremer/minarai-socketio-connector.git
            git clone git@github.com:Nextremer/minarai-websocket-connector.git
            git clone git@github.com:Nextremer/minarai-developer-console.git
            git clone git@github.com:Nextremer/minarai-application2.git
            git clone git@github.com:Nextremer/minarai-log-api.git
            git clone git@github.com:Nextremer/minarai-image-service.git
            git clone git@github.com:Nextremer/minarai-cs-chat-application.git
            git clone git@github.com:Nextremer/minarai-line-connector.git
            git clone git@github.com:Nextremer/minarai-botframework-connector.git
      - run:
          name: start
          command: |
            ls
            cd minarai-environment
            ls
            make start
            docker ps


      # - run:
      #     name: docker-compose up
      #     command: |
      #       docker-compose up -d

      # - run:
      #     name: health check web container
      #     command: |
      #       set -x
      #       docker network ls
      #       docker ps
      #       docker-compose up -d
            # docker run --network circlecitestrepo_default \
            # appropriate/curl --retry 10 --retry-delay 1 --retry-connrefused http://web:3000
